<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">

    <bean id="wxDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url"
                  value="jdbc:mysql://172.168.1.46:3306/wxdb?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="wxsupporter"/>
        <!-- java -cp druid-1.0.9.jar com.alibaba.druid.filter.config.ConfigTools you_password -->
        <property name="password"
                  value="Biyu5YzU+6sxDRbmWEa3B2uUcImzDo0BuXjTlL505+/pTb+/0Oqd3ou1R6J8+9Fy3CYrM18nBDqf6wAaPgUGOg=="/>
        <property name="connectionProperties" value="config.decrypt=true"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="5"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。-->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置拦截filters -->
        <!-- config：为数据库密码提供加密功能,从配置文件中读取配置,从远程http文件中读取配置； -->
        <property name="filters" value="config"/>
    </bean>

    <!-- Jdbc单数据源事务管理器 -->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        id="wxTransactionManager" p:dataSource-ref="wxDataSource"/>

    <!-- MyBatis使用Spring自带的事务管理器 -->
    <bean id="wxSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
        <property name="dataSource" ref="wxDataSource"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:mybatis/*Mapper.xml"/>
    </bean>

    <!-- 扫描basePackage下所有以annotationClass标注的接口，另外一种方式是扫描实现markerInterface接口的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="wxSqlSessionFactory"/>
        <property name="annotationClass" value="com.wxcommon.mybatis.MyBatisRepository"/>
        <property name="basePackage" value="com.hxq.mobile.weixin.repository"/>
    </bean>

    <!-- 配置事务传播特性  -->
    <tx:advice id="wxJdbcTxAdvice" transaction-manager="wxTransactionManager">
        <tx:attributes>
            <!-- select 开头的方法,开启只读,提高数据库访问性能 -->
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
             <!-- 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 -->
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
        </tx:attributes>
    </tx:advice>

	<aop:config>
		<!-- 配置参与jdbc事务的类 -->
		<aop:pointcut id="wxJdbcServiceMethod"
			expression="(execution(public * com.hxq.mobile.weixin.service.*Service.*(..)))
 			and !execution(* get*(..)) and !execution(* set*(..))"/>

		<!-- advisor：用来定义只有一个通知和一个切入点的切面 -->
		<aop:advisor advice-ref="wxJdbcTxAdvice" pointcut-ref="wxJdbcServiceMethod" order="2"/>
	</aop:config>
</beans>