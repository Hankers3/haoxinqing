package com.aebiz.b2b2c.servicestaff.servicestafflevel.dao;import java.util.List;import org.hibernate.Query;import org.springframework.stereotype.Repository;import com.aebiz.b2b2c.baseframework.basecrud.dao.BaseH4Impl;import com.aebiz.b2b2c.baseframework.utils.StringUtil;import com.aebiz.b2b2c.servicestaff.servicestafflevel.vo.ServicestafflevelModel;import com.aebiz.b2b2c.servicestaff.servicestafflevel.vo.ServicestafflevelQueryModel;@Repositorypublic class ServicestafflevelH4Impl extends		BaseH4Impl<ServicestafflevelModel, ServicestafflevelQueryModel>		implements ServicestafflevelDAO {	/**	 * 添加服务人员等级的是否需要校验平台会员等级名称是否存在	 * 	 * @return	 */	public boolean checkLevelNameExist(String levelName, String uuid) {		StringBuffer hql = new StringBuffer(				"from ServicestafflevelModel where levelName=:levelName");		if (!StringUtil.isEmpty(uuid)) {			hql.append(" and uuid <> :uuid");		}		Query query = this.getH4Session().createQuery(hql.toString());		query.setString("levelName", levelName);		if (!StringUtil.isEmpty(uuid)) {			query.setString("uuid", uuid);		}		if (query.list() != null && query.list().size() > 0) {			return true;		}		return false;	}	/**	 * 检查服务人员等级排序是否存在	 * 	 * @param position	 *            等级排序	 * @param uuid	 *            登记编号	 * @return	 */	public boolean checkpositionExist(String position, String uuid) {		StringBuffer hql = new StringBuffer(				"from ServicestafflevelModel where position=:position");		if (!StringUtil.isEmpty(uuid)) {			hql.append(" and uuid <> :uuid");		}		Query query = this.getH4Session().createQuery(hql.toString());		query.setString("position", position);		if (!StringUtil.isEmpty(uuid)) {			query.setString("uuid", uuid);		}		if (query.list() != null && query.list().size() > 0) {			return true;		}		return false;	}	/**	 * 通过家政员等级获取家政员等级名称	 * 	 * @param serviceStaffLevel	 * @return	 */	public String getServiceStaffLevelName(String serviceStaffLevel) {		StringBuffer hql = new StringBuffer(				"from ServicestafflevelModel where uuid=:uuid");		Query query = this.getH4Session().createQuery(hql.toString());		query.setString("uuid", serviceStaffLevel);		if (query.list() != null && query.list().size() > 0) {			ServicestafflevelModel model = (ServicestafflevelModel) query					.list().get(0);			return model.getLevelName();		}		return "";	}	/**	 * 通过家政员表等级字段获取家政员等级表信息	 * 	 * @param serviceStaffLevel	 * @return	 */	public ServicestafflevelModel getServicestafflevelModelbyserviceStaffLevel(			String serviceStaffLevel) {		StringBuffer hql = new StringBuffer(				" from ServicestafflevelModel where uuid =:serviceStaffLevel ");		Query query = this.getH4Session().createQuery(hql.toString());		query.setString("serviceStaffLevel", serviceStaffLevel);		Object obj = query.uniqueResult();		if (obj != null) {			return (ServicestafflevelModel) obj;		}		return null;	}	/**	 * 得到服务人员等级model的集合	 * 	 * @return	 */	public List<ServicestafflevelModel> ServicestafflevelModelList() {		StringBuffer hql = new StringBuffer(				" from ServicestafflevelModel where 1=1 ");		Query query = this.getH4Session().createQuery(hql.toString());		List<ServicestafflevelModel> servicestafflevelModellList = query.list();		return servicestafflevelModellList;	}	/**	 * 得到等级名称获取uuids	 * 	 * @return	 */	@Override	public List<String> getServicestafflevelModeluuids(String levelName) {		StringBuffer hql = new StringBuffer(				"select  s.uuid from ServicestafflevelModel as s  where s.levelName like:levelName ");		Query query = this.getH4Session().createQuery(hql.toString());		query.setString("levelName", "%" + levelName + "%");		List uuids = query.list();		return uuids;	}}